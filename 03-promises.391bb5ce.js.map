{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,QAChCC,EAAUF,SAASC,cAAc,uBACjCE,EAASH,SAASC,cAAc,sBAChCG,EAAWJ,SAASC,cAAc,wBAGxC,IAAII,EAFJN,EAAOO,iBAAiB,UAOxB,SAAsBC,GAIpB,GAHAA,EAAMC,iBACNH,EAASI,OAAOL,EAASM,OACzBC,EAAYF,OAAON,EAAOO,OACtBL,GAAU,GAAKM,GAAa,GAAKF,OAAOP,EAAQQ,OAAS,EAEzD,YADFb,EAAAe,OAAOC,QAAQ,iCAGfC,EAVW,EAUaL,OAAOP,EAAQQ,QACvCK,EAAiBC,KAAKC,MACtBV,EAAMW,cAAcC,O,IAdxB,IACIJ,EADAJ,EAAY,EAkBhB,SAASG,EAAcM,EAAUC,GAC/B,GAAIhB,IAAWe,EAER,CACW,IAAIE,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,CAAEM,SAAAT,EAAUU,MAAAT,IAEpBG,EAAO,CAAEK,SAAAT,EAAUU,MAAAT,GAAQ,GAE5BA,EAAM,IAIRU,MAAK,EAAGF,SAAAG,EAAQF,MAAEA,MACjBE,GAAY,EACZ,IAAIC,EAA8D,IAAlDP,KAAKQ,OAAOlB,KAAKC,MAAQF,GAAkB,KAC3DlB,EAAAe,OAAOuB,QAAQ,uBAAqBH,QAAiBC,OAErDnB,EAAckB,EAAUrB,EAAU,IAGnCyB,OAAM,EAAGP,SAAAQ,EAAQP,MAAEA,MAClBO,GAAY,EACZ,IAAIJ,EAA8D,IAAlDP,KAAKQ,OAAOlB,KAAKC,MAAQF,GAAkB,KAC3DlB,EAAAe,OAAOC,QAAQ,sBAAoBwB,QAAeJ,OAElDnB,EAAcuB,EAAU1B,EAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formEl = document.querySelector('form');\nconst delayEl = document.querySelector('input[name=\"delay\"]');\nconst stepEl = document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\nformEl.addEventListener('submit', onFormSubmit);\n\nlet amount;\nlet stepDelay = 0;\nlet formSubmitTime;\nlet position = 0;\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  amount = Number(amountEl.value);\n  stepDelay = Number(stepEl.value);\n  if (amount <= 0 || stepDelay <= 0 || Number(delayEl.value) < 0) {\n    Notify.failure(`❌ All values must be positive`);\n    return;\n  } else {\n    createPromise(position, Number(delayEl.value));\n    formSubmitTime = Date.now();\n    event.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  if (amount === position) {\n    return;\n  } else {\n    const promise = new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n\n    promise\n      .then(({ position, delay }) => {\n        position += 1;\n        let deltaTime = Math.round((Date.now() - formSubmitTime) / 100) * 100;\n        Notify.success(`✅ Fulfilled promise ${position} in ${deltaTime}ms`);\n        delay += stepDelay;\n        createPromise(position, stepDelay);\n      })\n\n      .catch(({ position, delay }) => {\n        position += 1;\n        let deltaTime = Math.round((Date.now() - formSubmitTime) / 100) * 100;\n        Notify.failure(`❌ Rejected promise ${position} in ${deltaTime}ms`);\n        delay += stepDelay;\n        createPromise(position, stepDelay);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$amount","addEventListener","event","preventDefault","Number","value","$ce04d3a99e08e73b$var$stepDelay","Notify","failure","$ce04d3a99e08e73b$var$createPromise","$ce04d3a99e08e73b$var$formSubmitTime","Date","now","currentTarget","reset","position1","delay1","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","position","delay","then","position2","deltaTime","round","success","catch","position3"],"version":3,"file":"03-promises.391bb5ce.js.map"}